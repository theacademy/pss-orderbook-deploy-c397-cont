name: Build-Deliver-Images
on: 
  push:
    branches:
      - main
  workflow_dispatch: 

jobs:
  Build-To-ECR:
    runs-on: [self-hosted, eks-sre-infra]
    env:
      ECR_REPOSITORY: "production-support-course"
      ECR_RR: "108174090253.dkr.ecr.us-east-1.amazonaws.com/production-support-course"
      COHORT: 'c397'
      TEAM: 'team04'
      #semantic-release-num: ${{ env.semantic-release-num }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
    
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and Push Front End
        id: push-img-fe
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: "${{ env.COHORT }}${{ env.TEAM }}fe-dev-${{ github.run_number }}"
        run: |
          docker build -t $REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG -f Dockerfiles/Dockerfile_nginx .
          docker push $REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG

      - name: Build and Push DB
        id: push-img-db
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: "${{ env.COHORT }}${{ env.TEAM }}db-dev-${{ github.run_number }}"
        run: |
          docker build -t $REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG -f Dockerfiles/Dockerfile_mysql .
          docker push $REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG

      - name: Build and Push API
        id: push-img-api
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: "${{ env.COHORT }}${{ env.TEAM }}api-dev-${{ github.run_number }}"
        run: |
          docker build -t $REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG -f Dockerfiles/Dockerfile_fastapi .
          docker push $REGISTRY/${{ env.ECR_REPOSITORY }}:$IMAGE_TAG
